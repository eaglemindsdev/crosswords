const e="https://crosswords.freepush.workers.dev/api";async function n(){try{const r=await fetch(`${e}/categories`);if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){return console.error("Failed to fetch blogs:",r),[]}}async function c(r,t,o){try{const s=await fetch(`${e}/crosswords/categories/${r}?page=${t}&limit=${o}`);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);return await s.json()}catch(s){return console.error("Failed to fetch blogs:",s),[]}}async function i(r,t){try{const o=await fetch(`${e}/crosswords/category-date/${r}?date=${t}`);if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return await o.json()}catch(o){return console.error("Failed to fetch blogs:",o),[]}}async function l(){try{const r=await fetch(`${e}/featurecategories`);if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){return console.error("Failed to fetch blogs:",r),[]}}async function u(r){try{const t=await fetch(`${e}/crosswords-clue/${r}`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){return console.error(`Failed to fetch blog with ID ${r}:`,t),null}}export{i as a,c as b,n as c,l as d,u as g};
